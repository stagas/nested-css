var e=e=>null!=e[1],t=/\/\*[^]*?\*\//g,r=/\s+/g,n=((...t)=>{const r=(e=>new RegExp(e.map((e=>e.toString())).map((e=>e.slice(e.indexOf("/")+1,e.lastIndexOf("/")))).join("|"),"gi"))(t);return t=>{const n=t.matchAll(r),o=()=>(t=>{if(null==t?.index)return;if(!t.groups)throw new TypeError("RegExp match is missing named groups such as: /(?<group>[a-z])/");const r=Object.entries(t.groups).find(e);return r?{group:r[0],value:r[1],index:t.index}:void 0})(n.next().value);return Object.defineProperty(o,Symbol.iterator,{value:function*(e){for(;e=o();)yield e}}),o}})(/(?<open>\s*\{\s*)/,/(?<close>\s*\}\s*)/,/\s*(?<rule>[^{;}]+)\s+?(?={)/,/\s*(?<prop>[^:;]+)(?=:)/,/\s*(?<value>[^:;]+)(?=;)/);function o(e){e=e.replace(t," ").replace(r," ");const o=n(e),s=(e={})=>{let t;for(;t=o();){const{value:r,group:n}=t;switch(n){case"rule":o(),s(e[r.trim()]={});break;case"prop":e[r.trim()]=o()?.value?.trim();break;case"close":return e}}return e};return s()}var s=(e,t)=>t?`${t}{${e}}`:e,i=(e,t,r)=>{return`${e}{${n=t,n.replace(/[A-Z]/g,((e,t)=>(t?"-":"")+e)).toLowerCase()}:${r}}`;var n},l=(e,t)=>[...e.matchAll(/[\w-]+|./g)].flat().map((e=>t?.get(e)??e)).join("");function u(e,t,r){t??="";let n="";const o=(e,u="",c="")=>{for(const a in e){const p=e[a];if("object"==typeof p){const e=/^@/.test(a)?a:null;let t=u;e||(t=a.split(",").map((e=>e.trim())).map((e=>u.split(",").map((t=>(t+(/^&/.test(e)?e.slice(1):" "+e)).trim())).join(","))).map((e=>e.trim())).join(",")),o(p,t,e||c)}else{const e=s(i(u?l(u,r):t,a,p),c);n+="\n"+e.trim()}}};return o({[t]:e}),n.trim()}function c(e,...t){const r=function(e,t){let r="";for(let n=0;n<e.length;n++)r+=e[n],r+=t[n];return r}(e,t),n=o(r);return function(e=":host",t){return u(n,e,t)}}export{c as css,o as cssToJs,u as jsToCss};